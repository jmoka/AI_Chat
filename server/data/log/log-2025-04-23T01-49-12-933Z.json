[
  {
    "role": "user",
    "content": "?"
  },
  {
    "role": "assistant",
    "content": "\n\nOkay, the user just sent a question mark \"?\". I need to respond appropriately.\n\nFirst, I should acknowledge their query and offer help. Since they might be unsure of what to ask, I should prompt them to specify their needs.\n\nLooking at the history, they've asked about my instructions before, so maybe they need clarification or have a specific question now. They might need guidance on what they can ask.\n\nI should follow the guidelines: stay technical, offer assistance in the areas I'm supposed to, like Node.js, Express, etc. Maybe list possible topics they can ask about to help them get started.\n\nI need to structure the response with markdown, as per the instructions. Use bullet points or sections to make it clear. Also, ensure it's in Portuguese since previous interactions were in Portuguese.\n\nPossible points to cover:\n- Ask them to describe the technical problem.\n- Mention specific areas I can help with (like Node.js, Express, etc.)\n- Offer code examples or explanations.\n- Remind them to share files if needed.\n\nAvoid being vague. Make sure the response is welcoming but focused on technical support. Check for any previous context, but since the user hasn't provided much yet, keep it general but structured.\n\nAlright, format the response with the required sections, use markdown, and keep it helpful.\n\n\n# Pronto para ajudar! üõ†Ô∏è  \n\n## Como posso contribuir?  \nPreciso entender **qual √© o seu desafio t√©cnico** para oferecer uma solu√ß√£o precisa.  \n\n---\n\n### 1. **O que posso resolver?**  \n- **Implementar funcionalidades**: APIs, autentica√ß√£o, manipula√ß√£o de arquivos, etc.  \n- **Analisar e refatorar c√≥digo** para melhorar performance, seguran√ßa ou legibilidade.  \n- **Explicar conceitos**: Ass√≠ncrono no JavaScript, arquitetura MVC, algoritmos, etc.  \n- **Resolver erros**: Tratar exceptions, depurar c√≥digo, otimizar queries.  \n\n---\n\n### 2. **√Åreas espec√≠ficas de atua√ß√£o**  \n- **Node.js/Express**: APIs REST, middlewares, valida√ß√£o de dados.  \n- **Front-end**: HTML sem√¢ntico, CSS Flex/Grid, interatividade com JavaScript puro.  \n- **Banco de dados**: SQL (ex: PostgreSQL) ou NoSQL (MongoDB).  \n- **Seguran√ßa**: Autentica√ß√£o JWT, valida√ß√£o de entrada, preven√ß√£o de inje√ß√µes.  \n\n---\n\n### 3. Exemplo de c√≥digo (para inspira√ß√£o)  \n```javascript\n// Exemplo de middleware de autentica√ß√£o JWT  \nfunction authMiddleware(req, res, next) {  \n  const token = req.cookies.accessToken;  \n  if (!token) return res.sendStatus(401);  \n  try {  \n    const user = jwt.verify(token, process.env.SECRET);  \n    req.user = user;  \n    next();  \n  } catch (err) {  \n    res.sendStatus(403);  \n  }  \n}  \n```  \n\n---\n\n### Como devo prosseguir?  \n- **Descreva o problema**: *\"Como criar uma API com autentica√ß√£o OAuth?\"* ou *\"Por que meu loop est√° causando um memory leak?\"*  \n- **Compartilhe c√≥digo** (use bloco ```js/html/etc para formata√ß√£o).  \n- **Pergunte sobre conceitos**: *\"Qual a diferen√ßa entre `async/await` e `.then()`?\"*  \n\n**O que voc√™ precisa resolver hoje?** üòä  \n*(Use o bot√£o \"Anexar arquivo\" para incluir c√≥digos ou logs.)*"
  }
]